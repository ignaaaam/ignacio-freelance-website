---
import Translate from './Translate.astro';

const faqs = [
  {
    question: "faq.items.0.question",
    answer: "faq.items.0.answer"
  },
  {
    question: "faq.items.1.question",
    answer: "faq.items.1.answer"
  },
  {
    question: "faq.items.2.question",
    answer: "faq.items.2.answer"
  },
  {
    question: "faq.items.3.question",
    answer: "faq.items.3.answer"
  }
];
---

<section class="py-20 bg-secondary" id="faq">
  <div class="container">
    <div class="text-center mb-16">
      <h2 class="text-3xl font-bold mb-4">
        <Translate key="faq.title" />
      </h2>
      <p class="text-text-muted max-w-2xl mx-auto">
        <Translate key="faq.description" />
      </p>
    </div>

    <div class="max-w-3xl mx-auto">
      <div class="space-y-6">
        {faqs.map(faq => (
          <details class="faq-item">
            <summary class="faq-question">
              <span><Translate key={faq.question} /></span>
              <svg class="arrow-icon" width="24" height="24" viewBox="0 0 24 24" fill="none">
                <path d="M6 9L12 15L18 9" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </summary>
            <div class="faq-answer">
              <p><Translate key={faq.answer} /></p>
            </div>
          </details>
        ))}
      </div>
    </div>
  </div>
</section>

<style>
  .text-text-muted {
    color: var(--color-text-muted);
  }
  
  .bg-secondary {
    background-color: var(--color-secondary);
  }

  .faq-item {
    background-color: var(--color-card-bg);
    border-radius: 0.5rem;
    padding: 1rem;
  }

  .faq-question {
    display: flex;
    justify-content: space-between;
    align-items: center;
    cursor: pointer;
    font-weight: 500;
  }

  .faq-answer {
    margin-top: 1rem;
    color: var(--color-text-muted);
  }

  .arrow-icon {
    transition: transform 0.3s ease;
  }

  details[open] .arrow-icon {
    transform: rotate(180deg);
  }
</style>

<script>
  // Add smooth animation to FAQ items
  document.querySelectorAll('.faq-item').forEach(item => {
    item.addEventListener('click', (event: Event) => {
      const target = event.target as HTMLElement;
      if (target && target.tagName.toLowerCase() === 'summary') {
        event.preventDefault();
        const details = target.parentElement as HTMLDetailsElement;
        if (details && details.hasAttribute('open')) {
          details.classList.add('closing');
          setTimeout(() => {
            details.removeAttribute('open');
            details.classList.remove('closing');
          }, 300);
        } else if (details) {
          details.setAttribute('open', '');
        }
      }
    });
  });
</script> 