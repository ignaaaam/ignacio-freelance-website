---
interface Props {
  lang?: "es" | "en";
}

const { lang = "es" } = Astro.props;

const content = {
  es: {
    text: "üî• √öLTIMAS HORAS: Audit de conversi√≥n GRATIS (valor ‚Ç¨497) - Solo quedan 7 plazas",
    cta: "Conseguir mi audit"
  },
  en: {
    text: "üî• FINAL HOURS: FREE conversion audit (‚Ç¨497 value) - Only 7 spots left",
    cta: "Get my audit"
  }
};

const copy = content[lang];
---

<!-- Banner spacer to maintain layout when banner becomes fixed -->
<div id="banner-spacer" class="h-0 transition-all duration-500 ease-in-out"></div>

<div id="urgency-banner" class="bg-gradient-to-r from-red-500 to-red-600 text-white py-3 relative z-50 shadow-lg transition-all duration-500 ease-in-out">
  <div class="container">
    <div class="flex items-center justify-between">
      <div class="flex items-center gap-3">
        <span class="animate-pulse">‚ö†Ô∏è</span>
        <span class="font-medium text-sm md:text-base">{copy.text}</span>
      </div>
      <div class="flex items-center gap-3">
        <button 
          class="bg-yellow-400 text-black px-4 py-1 rounded-full text-sm font-bold hover:bg-yellow-300 transition-colors"
          onclick="document.getElementById('leadMagnetForm').scrollIntoView({ behavior: 'smooth' }); if(typeof window.trackCTAClick === 'function') { window.trackCTAClick('Urgency Banner CTA'); }"
        >
          {copy.cta}
        </button>
        <button id="close-banner" class="text-white hover:text-gray-200 ml-2">
          ‚úï
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  let bannerClosed = false;
  let isScrolling = false;
  
  // Close banner functionality
  document.getElementById('close-banner')?.addEventListener('click', () => {
    hideBanner('user_close');
  });
  
  // Hide banner function
  function hideBanner(reason: string = 'auto') {
    const banner = document.getElementById('urgency-banner');
    if (banner && !bannerClosed) {
      bannerClosed = true;
      banner.style.transform = 'translateY(-100%)';
      banner.style.opacity = '0';
      
      // Hide completely after animation
      setTimeout(() => {
        banner.style.display = 'none';
        // Trigger header to show
        const header = document.getElementById('main-header');
        if (header) {
          header.classList.add('show-header');
        }
      }, 500);
      
      // Track banner close
      if (typeof window.gtag === 'function') {
        window.gtag('event', 'banner_close', {
          event_category: 'Urgency Banner',
          event_label: `Banner Closed - ${reason}`
        });
      }
    }
  }

  // Scroll animation logic
  function handleScroll() {
    if (bannerClosed) return;
    
    const banner = document.getElementById('urgency-banner');
    const header = document.getElementById('main-header');
    const spacer = document.getElementById('banner-spacer');
    const scrollY = window.scrollY;
    
    if (!isScrolling && scrollY > 10) {
      // First scroll - make banner fixed and add spacer
      isScrolling = true;
      if (banner && spacer) {
        const bannerHeight = banner.offsetHeight;
        banner.style.position = 'fixed';
        banner.style.top = '0';
        banner.style.left = '0';
        banner.style.right = '0';
        banner.style.zIndex = '60';
        // Add spacer to prevent layout jump
        spacer.style.height = `${bannerHeight}px`;
      }
    }
    
    // After scrolling more, start transitioning to header
    if (scrollY > 100 && !bannerClosed) {
      // Fade out banner and slide in header
      if (banner && header) {
        banner.style.transform = 'translateY(-100%)';
        banner.style.opacity = '0';
        
        setTimeout(() => {
          if (!bannerClosed) {
            banner.style.display = 'none';
            header.classList.add('show-header');
            bannerClosed = true;
            // Remove spacer when banner is completely hidden
            if (spacer) {
              spacer.style.height = '0';
            }
          }
        }, 500);
      }
    }
  }

  // Add scroll listener
  window.addEventListener('scroll', handleScroll, { passive: true });
  
  // Auto-hide after 60 seconds completely
  setTimeout(() => {
    hideBanner('auto_timeout');
  }, 60000);
</script>